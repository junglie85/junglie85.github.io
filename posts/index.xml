<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Ashley's musings</title><link>https://junglie85.github.io/posts/</link><description>Recent content in Posts on Ashley's musings</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><copyright>Ashley Morton-Bye</copyright><lastBuildDate>Thu, 27 Jan 2022 15:12:00 +0000</lastBuildDate><atom:link href="https://junglie85.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Packedman game prototype development with Rust</title><link>https://junglie85.github.io/posts/packedman-game-prototype-development-with-rust/</link><pubDate>Thu, 27 Jan 2022 15:12:00 +0000</pubDate><guid>https://junglie85.github.io/posts/packedman-game-prototype-development-with-rust/</guid><description>I&amp;rsquo;m developing a Pac-Man inspired game in Rust called Packedman (think Pac-Man with guns). I&amp;rsquo;m not using any game engines or frameworks like Bevy or Amythest. Instead, I&amp;rsquo;m developing the game from scratch so that I can learn about how game engines work. In this and following articles I&amp;rsquo;ll be talking about how I approached creating this game. There are many other ways - mine is not the best way, hopefully it&amp;rsquo;s not the worst either!</description></item><item><title>Game Programming Maths Cheat Sheet</title><link>https://junglie85.github.io/posts/game-programming-maths-cheat-sheet/</link><pubDate>Wed, 26 Jan 2022 20:52:10 +0000</pubDate><guid>https://junglie85.github.io/posts/game-programming-maths-cheat-sheet/</guid><description>I don&amp;rsquo;t use these maths functions often enough for them to stick in my head when I need them. I&amp;rsquo;m developing this cheat sheet to help me have a handy reference when needed.
Linear interpolation Linear interpolation or LERP is useful for finding the value of a number between two points. Examples of uses are colour blending and distance along a line.
There are two formulae:
c = a + (b - a) * t</description></item></channel></rss>